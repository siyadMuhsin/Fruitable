<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Fruitable Coupons List</title>
    <link rel="stylesheet" href="/admin/assets/vendors/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="/admin/assets/vendors/css/vendor.bundle.base.css">
    <link rel="stylesheet" href="/admin/assets/css/style.css">
    <link rel="shortcut icon" href="/admin/assets/images/AdminLogo.png" />
</head>
<body>
    <div class="container-scroller">
        <%- include('_partials/_sidebar') %>
        <div class="container-fluid page-body-wrapper">
            <nav class="navbar p-0 fixed-top d-flex flex-row">
                <%- include('_partials/_navbar') %>
            </nav>
            <div class="main-panel">
                <div class="content-wrapper">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-title">Coupons List</h4>
                            <button class="btn btn-success mb-3" data-toggle="modal" data-target="#createCouponModal">+ Add New Coupon</button>
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Sl. No.</th>
                                            <th>Coupon Code</th>
                                            <th>Discount (%)</th>
                                            <th>Min Price</th>
                                            <th>Start Date</th>
                                            <th>End Date</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if (coupons.length > 0) { %>
                                            <% coupons.forEach((coupon, index) => { %>
                                                <tr id="coupon-<%= coupon._id %>">
                                                    <td><%= index + 1 %></td>
                                                    <td><%= coupon.code %></td>
                                                    <td><%= coupon.discount %> %</td>
                                                    <td>â‚¹<%= coupon.minPrice %></td>
                                                    <td><%= new Date(coupon.startDate).toISOString().split('T')[0] %></td>
                                                    <td><%= new Date(coupon.endDate).toISOString().split('T')[0] %></td>
                                                    <td>
                                                        <button class="btn <%= coupon.active ? 'btn-danger' : 'btn-success' %>" 
                                                            id="btn-<%= coupon._id %>" 
                                                            onclick="<%= coupon.active ? `deactivateCoupon('${coupon._id}')` : `activateCoupon('${coupon._id}')` %>">
                                                        <%= coupon.active ? 'Deactivate' : 'Activate' %>
                                                    </button>
                                                        <button class="btn btn-warning edit-button"
                                                                data-id="<%= coupon._id %>"
                                                                data-code="<%= coupon.code %>"
                                                                data-discount="<%= coupon.discount %>"
                                                                data-min-price="<%= coupon.minPrice %>"
                                                                data-start-date="<%= new Date(coupon.startDate).toISOString().split('T')[0] %>"
                                                                data-end-date="<%= new Date(coupon.endDate).toISOString().split('T')[0] %>">
                                                            Edit
                                                        </button>
                                                    </td>
                                                </tr>
                                            <% }); %>
                                        <% } else { %>
                                            <tr>
                                                <td colspan="7">No coupons found</td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                                
                            </div>
                        </div>
                    </div>
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            <!-- Previous Page Link -->
                            <% if (currentPage > 1) { %>
                                <li class="page-item">
                                    <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            <% } else { %>
                                <li class="page-item disabled">
                                    <a class="page-link" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            <% } %>
                    
                            <!-- Page Number Links Loop -->
                            <% for (let i = 1; i <= totalPages; i++) { %>
                                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                    <a class="page-link" href="?page=<%= i %>&"><%= i %></a>
                                </li>
                            <% } %>
                    
                            <!-- Next Page Link -->
                            <% if (currentPage < totalPages) { %>
                                <li class="page-item">
                                    <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            <% } else { %>
                                <li class="page-item disabled">
                                    <a class="page-link" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            <% } %>
                        </ul>
                    </nav>
                    
                </div>
            </div>
<!-- Add Coupon Modal -->
<div class="modal fade" id="createCouponModal" tabindex="-1" role="dialog" aria-labelledby="createCouponModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createCouponModalLabel">Add New Coupon</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="createCouponForm" >
                    <div class="form-group">
                        <label for="couponCode">Coupon Code</label>
                        <input type="text" class="form-control" id="couponCode" >
                        <span class="invalid-feedback" id="couponCodeError" style="display:none;">Please enter a valid coupon code.</span>
                    </div>
                    <div class="form-group">
                        <label for="discount">Discount (%)</label>
                        <input type="number" class="form-control" id="discount" >
                        <span class="invalid-feedback" id="discountError" style="display:none;">Discount must be between 1 and 100.</span>
                    </div>
                    <div class="form-group">
                        <label for="minPrice">Min Price</label>
                        <input type="number" class="form-control" id="minPrice" >
                        <span class="invalid-feedback" id="minPriceError" style="display:none;">Minimum price cannot be negative.</span>
                    </div>
                    <div class="form-group">
                        <label for="startDate">Start Date</label>
                        <input type="date" class="form-control" id="startDate" >
                        <span class="invalid-feedback" id="startDateError" style="display:none;">Start date cannot be in the past.</span>
                    </div>
                    <div class="form-group">
                        <label for="endDate">End Date</label>
                        <input type="date" class="form-control" id="endDate" >
                        <span class="invalid-feedback" id="endDateError" style="display:none;">End date must be after start date.</span>
                    </div>
                    <button class="btn btn-primary">Add Coupon</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Coupon Modal -->
<div class="modal fade" id="editCouponModal" tabindex="-1" role="dialog" aria-labelledby="editCouponModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCouponModalLabel">Edit Coupon</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editCouponForm">
                    <input type="hidden" id="editCouponId">
                    <div class="form-group">
                        <label for="editCouponCode">Coupon Code</label>
                        <input type="text" class="form-control" id="editCouponCode" required>
                        <span class="invalid-feedback">Coupon code must be at least 4 characters long.</span>
                    </div>
                    <div class="form-group">
                        <label for="editDiscount">Discount (%)</label>
                        <input type="number" class="form-control" id="editDiscount" required>
                        <span class="invalid-feedback">Discount must be a number between 1 and 100.</span>
                    </div>
                    <div class="form-group">
                        <label for="editMinPrice">Min Price</label>
                        <input type="number" class="form-control" id="editMinPrice" required>
                        <span class="invalid-feedback">Minimum price must be a non-negative number.</span>
                    </div>
                    <div class="form-group">
                        <label for="editStartDate">Start Date</label>
                        <input type="date" class="form-control" id="editStartDate" required>
                        <span class="invalid-feedback">Start date must be a valid date and cannot be in the past.</span>
                    </div>
                    <div class="form-group">
                        <label for="editEndDate">End Date</label>
                        <input type="date" class="form-control" id="editEndDate" required>
                        <span class="invalid-feedback">End date must be a valid date and must be after the start date.</span>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="/admin/assets/vendors/js/vendor.bundle.base.js"></script>
            <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
            <script src="/admin/assets/js/off-canvas.js"></script>
            <script src="/admin/assets/js/hoverable-collapse.js"></script>
            <script src="/admin/assets/js/misc.js"></script>
            <script src="/admin/assets/js/settings.js"></script>
            <script src="/admin/assets/js/todolist.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/alertify.min.css"/>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/css/themes/default.min.css"/>
<script src="https://cdn.jsdelivr.net/npm/alertifyjs@1.13.1/build/alertify.min.js"></script>

<script>
                function deactivateCoupon(id) {
                  
                    // Add your deactivate coupon logic here
                }

                function activateCoupon(id) {
                    
                    // Add your activate coupon logic here
                }
</script>
<script>
    $('.edit-button').click(function () {
        const couponId = $(this).data('id');
        const couponCode = $(this).data('code');
        const discount = $(this).data('discount');
        const minPrice = $(this).data('min-price');
        const startDate = $(this).data('start-date');
        const endDate = $(this).data('end-date');

        $('#editCouponId').val(couponId);
        $('#editCouponCode').val(couponCode);
        $('#editDiscount').val(discount);
        $('#editMinPrice').val(minPrice);
        $('#editStartDate').val(startDate);
        $('#editEndDate').val(endDate);

        $('#editCouponModal').modal('show');
    });

 

  


</script>

<!-- create coupons start -->
<script>
document.getElementById('createCouponForm').addEventListener('submit', (e) => {
    e.preventDefault();

    const inputs = document.querySelectorAll('#createCouponForm .form-control');
    const errorMessages = document.querySelectorAll('#createCouponForm .invalid-feedback');

    inputs.forEach(input => {
        input.classList.remove('is-invalid');
    });

    errorMessages.forEach(msg => {
        msg.style.display = 'none';
    });

    const couponCode = document.getElementById('couponCode').value.trim();
    const discount = parseFloat(document.getElementById('discount').value);
    const minPrice = parseFloat(document.getElementById('minPrice').value);
    const startDate = new Date(document.getElementById('startDate').value);
    const endDate = new Date(document.getElementById('endDate').value);

    let hasError = false;

    if (couponCode.length < 4) {
        document.getElementById('couponCode').classList.add('is-invalid');
        document.getElementById('couponCodeError').style.display = 'block';
        hasError = true;
    }

    if (isNaN(discount) || discount <= 0 || discount > 100) {
        document.getElementById('discount').classList.add('is-invalid');
        document.getElementById('discountError').style.display = 'block';
        hasError = true;
    }

    if (isNaN(minPrice) || minPrice < 0) {
        document.getElementById('minPrice').classList.add('is-invalid');
        document.getElementById('minPriceError').style.display = 'block';
        hasError = true;
    }

    const today = new Date();
today.setHours(0, 0, 0, 0); 
    if (isNaN(startDate.getTime()) || startDate < today) {
        document.getElementById('startDate').classList.add('is-invalid');
        document.getElementById('startDateError').style.display = 'block';
        hasError = true;
    }

    if (isNaN(endDate.getTime()) || endDate <= startDate) {
        document.getElementById('endDate').classList.add('is-invalid');
        document.getElementById('endDateError').style.display = 'block';
        hasError = true;
    }

    if (!hasError) {
        alertify.confirm('Are you sure you want to add this coupon?',
            function () {
                const couponData = {
                    code: couponCode,
                    discount: discount,
                    minPrice: minPrice,
                    startDate: startDate.toISOString(),
                    endDate: endDate.toISOString(),
                };

                axios.post('/admin/coupons/create', couponData)
                    .then(response => {
                        alertify.success('Coupon created successfully!');
                        document.getElementById('createCouponForm').reset();
                    })
                    .then(() => {
                        location.reload();
                    })
                    .catch(error => {
                        alertify.error('Error creating coupon: ' + error.response.data.message);
                    });
            },
            function () {
                alertify.error('Coupon creation canceled');
            }
        ).set('labels', { ok: 'Yes', cancel: 'No' });
    } else {
        $('#createCouponModal').modal('show');
    }
});
</script>


<!-- edit coupons start -->
 <script>
document.getElementById('editCouponForm').addEventListener('submit', (e) => {
    e.preventDefault();
    
    const inputs = document.querySelectorAll('#editCouponForm .form-control');
    inputs.forEach(input => {
        input.classList.remove('is-invalid');
        const feedback = input.nextElementSibling; // The corresponding span for feedback
        if (feedback) feedback.style.display = 'none'; // Hide previous messages
    });

    const couponId = document.getElementById('editCouponId').value;
    const couponData = {
        code: document.getElementById('editCouponCode').value.trim(),
        discount: parseFloat(document.getElementById('editDiscount').value),
        minPrice: parseFloat(document.getElementById('editMinPrice').value),
        startDate: new Date(document.getElementById('editStartDate').value).toISOString(),
        endDate: new Date(document.getElementById('editEndDate').value).toISOString(),
    };

    let hasError = false;

    if (couponData.code.length < 4) {
        const feedback = document.getElementById('editCouponCode').nextElementSibling;
        document.getElementById('editCouponCode').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }

    if (isNaN(couponData.discount) || couponData.discount <= 0 || couponData.discount > 100) {
        const feedback = document.getElementById('editDiscount').nextElementSibling;
        document.getElementById('editDiscount').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }

    if (isNaN(couponData.minPrice) || couponData.minPrice < 0) {
        const feedback = document.getElementById('editMinPrice').nextElementSibling;
        document.getElementById('editMinPrice').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }

    if (isNaN(new Date(couponData.startDate).getTime()) || new Date(couponData.startDate) < new Date()) {
        const feedback = document.getElementById('editStartDate').nextElementSibling;
        document.getElementById('editStartDate').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }

    if (isNaN(new Date(couponData.endDate).getTime()) || new Date(couponData.endDate) <= new Date(couponData.startDate)) {
        const feedback = document.getElementById('editEndDate').nextElementSibling;
        document.getElementById('editEndDate').classList.add('is-invalid');
        feedback.style.display = 'block'; // Show feedback message
        hasError = true;
    }

    if (hasError) {
        return; // Prevent submission if there are validation errors
    }

    alertify.confirm('Are you sure you want to update this coupon?',
        function () {
            axios.put(`/admin/coupons/update/${couponId}`, couponData)
                .then((response) => {
                    if (response.data.success) {
                        alertify.success(response.data.message);
                    } else {
                        alertify.error(response.data.message);
                    }
                })
                .then(() => {
                    location.reload();
                })
                .catch(error => {
                    alertify.error('Error updating coupon: ' + error.response.data.message);
                });
        },
        function () {
            alertify.error('Coupon update canceled');
        }
    ).set('labels', { ok: 'Yes', cancel: 'No' });
});

 </script>

 <!--  activate and deactivate coupons -->
   <script>
    // Function to activate the coupon
function activateCoupon(couponId) {
    // Prompt confirmation using Alertify
    alertify.confirm('Activate Coupon', 'Are you sure you want to activate this coupon?', 
        function() { // On Confirm
            // Send PATCH request to activate the coupon
            axios.patch(`/admin/coupons/status/${couponId}`, { active: true })
                .then(response => {
                    // Check if the response was successful
                    if (response.status === 200) {
                        // Update button state dynamically
                        const button = document.getElementById(`btn-${couponId}`);
                        button.classList.remove('btn-success');
                        button.classList.add('btn-danger');
                        button.innerText = 'Deactivate';
                        button.setAttribute('onclick', `deactivateCoupon('${couponId}')`);
                    }
                })
                .catch(error => {
                    console.error('Error activating coupon:', error);
                    alertify.error('Failed to activate coupon. Please try again.');
                });
        }, 
        function() { // On Cancel
            alertify.message('Cancelled');
        }
    );
}

function deactivateCoupon(couponId) {
    // Prompt confirmation using Alertify
    alertify.confirm('Deactivate Coupon', 'Are you sure you want to deactivate this coupon?', 
        function() { // On Confirm
            // Send PATCH request to deactivate the coupon
            axios.patch(`/admin/coupons/status/${couponId}`, { active: false })
                .then(response => {
                    // Check if the response was successful
                    if (response.status === 200) {
                        // Update button state dynamically
                        const button = document.getElementById(`btn-${couponId}`);
                        button.classList.remove('btn-danger');
                        button.classList.add('btn-success');
                        button.innerText = 'Activate';
                        button.setAttribute('onclick', `activateCoupon('${couponId}')`);
                    }
                })
                .catch(error => {
                    console.error('Error deactivating coupon:', error);
                    alertify.error('Failed to deactivate coupon. Please try again.');
                });
        }, 
        function() { // On Cancel
            alertify.message('Cancelled');
        }
    );
}

   </script>
</body>
</html>
