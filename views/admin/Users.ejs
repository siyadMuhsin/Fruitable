<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Fruitable Users List</title>
    <!-- plugins:css -->
    <link rel="stylesheet" href="/admin/assets/vendors/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="/admin/assets/vendors/css/vendor.bundle.base.css">

    <link rel="stylesheet" href="/admin/assets/css/style.css">

    <link rel="shortcut icon" href="/admin/assets/images/AdminLogo.png" />
  </head>
  <body>
    <style>
        .pagination {
    display: flex;
    justify-content: center;
    margin-top: 20px;
    color: blue;
}

.pagination .btn {
    background-color: rgb(9, 101, 223);
    color: rgb(252, 252, 252);
    margin: 0 5px;
}
    </style>
    <div class="container-scroller">
      <!-- partial:../../partials/_sidebar.html -->
      <%- include('_partials/_sidebar') %>
      <!-- partial -->
      <div class="container-fluid page-body-wrapper">
        <!-- partial:../../partials/_navbar.html -->
        <nav class="navbar p-0 fixed-top d-flex flex-row">

         <%- include('_partials/_navbar') %>
        </nav>
        <div class="main-panel">
            <div class="content-wrapper">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">User List</h4>
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Sl. No.</th>
                                        <th>Name</th>
                                        <th>Email</th>
                                        <th>Google User</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% users.forEach((user, index) => { %>
                                        <tr id="user-<%= user._id %>">
                                            <td><%= (currentPage - 1) * limit + index + 1 %></td>
                                            <td><%= user.username %></td>
                                            <td><%= user.email %></td>
                                            <td>
                                                <span class="badge <%= user.isGoogleUser ? 'badge-info' : 'badge-primary' %>">
                                                    <%= user.isGoogleUser ? 'Yes' : 'No' %>
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge <%= user.isBlocked ? 'badge-danger' : 'badge-success' %>">
                                                    <%= user.isBlocked ? 'Blocked' : 'Active' %>
                                                </span>
                                            </td>
                                            <td>
                                                <% if (!user.isBlocked) { %>
                                                    <button class="btn btn-danger" onclick="blockUser('<%= user._id %>')">Block</button>
                                                <% } else { %>
                                                    <button class="btn btn-success" onclick="unblockUser('<%= user._id %>')">Unblock</button>
                                                <% } %>
                                            </td>
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
        
                        <!-- Pagination Controls -->
                        <div class="pagination">
                            <% if (currentPage > 1) { %>
                                <a href="?page=<%= currentPage - 1 %>&limit=<%= limit %>" class="btn btn-primary">Previous</a>
                            <% } %>
                            <% for (let i = 1; i <= totalPages; i++) { %>
                                <a href="?page=<%= i %>&limit=<%= limit %>" 
                                   class="btn <%= currentPage === i ? 'btn-secondary' : 'btn-outline-primary' %>">
                                    <%= i %>
                                </a>
                            <% } %>
                            <% if (currentPage < totalPages) { %>
                                <a href="?page=<%= currentPage + 1 %>&limit=<%= limit %>" class="btn btn-primary">Next</a>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    <script src="/admin/assets/vendors/js/vendor.bundle.base.js"></script>
    <script src="/admin/assets/js/off-canvas.js"></script>
    <script src="/admin/assets/js/hoverable-collapse.js"></script>
    <script src="/admin/assets/js/misc.js"></script>
    <script src="/admin/assets/js/settings.js"></script>
    <script src="/admin/assets/js/todolist.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

    <script>
      // Function to block a user
async function blockUser(userId) {
    const { value: confirmation } = await Swal.fire({
        title: 'Are you sure?',
        text: "You want to block this user?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, block it!'
    });

    if (confirmation) {
        try {
            const response = await axios.patch(`/admin/users/block/${userId}`);

            // Success Alert
            Swal.fire({
                title: 'Blocked!',
                text: 'User has been blocked.',
                icon: 'success',
                timer: 1500,
                showConfirmButton: false
            });

            // Update the status in the table
            const userRow = document.getElementById(`user-${userId}`);
            userRow.querySelector('td:nth-child(5) .badge').textContent = 'Blocked';
            userRow.querySelector('td:nth-child(5) .badge').className = 'badge badge-danger';
            userRow.querySelector('td:nth-child(6) button').textContent = 'Unblock';
            userRow.querySelector('td:nth-child(6) button').className = 'btn btn-success';
            userRow.querySelector('td:nth-child(6) button').setAttribute('onclick', `unblockUser('${userId}')`);

        } catch (error) {
            Swal.fire({
                title: 'Error!',
                text: error.response?.data?.message || 'Failed to block user.',
                icon: 'error',
                timer: 1500,
                showConfirmButton: false
            });
        }
    }
}

// Function to unblock a user
async function unblockUser(userId) {
    const { value: confirmation } = await Swal.fire({
        title: 'Are you sure?',
        text: "You want to unblock this user?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, unblock it!'
    });

    if (confirmation) {
        try {
            const response = await axios.patch(`/admin/users/unblock/${userId}`);

            // Success Alert
            Swal.fire({
                title: 'Unblocked!',
                text: 'User has been unblocked.',
                icon: 'success',
                timer: 1500,
                showConfirmButton: false
            });

            // Update the status in the table
            const userRow = document.getElementById(`user-${userId}`);
            userRow.querySelector('td:nth-child(5) .badge').textContent = 'Active';
            userRow.querySelector('td:nth-child(5) .badge').className = 'badge badge-success';
            userRow.querySelector('td:nth-child(6) button').textContent = 'Block';
            userRow.querySelector('td:nth-child(6) button').className = 'btn btn-danger';
            userRow.querySelector('td:nth-child(6) button').setAttribute('onclick', `blockUser('${userId}')`);

        } catch (error) {
            Swal.fire({
                title: 'Error!',
                text: error.response?.data?.message || 'Failed to unblock user.',
                icon: 'error',
                timer: 1500,
                showConfirmButton: false
            });
        }
    }
}
    </script>
  </body>
</html>